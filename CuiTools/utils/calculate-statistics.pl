#!/usr/bin/perl

=head1 NAME

calculate-statisticss.pl - This program calculates the PPV, NPV, sensitivity and specificitity.

=head1 SYNOPSIS

This utility takes a directory containing the log files generated by the 
supervised-disambiguate.pl program in CuiTools. These log files include 
files with the postfix .weka. This programs opens those files and uses 
the information to calculate their PPV, NPV, sensitivity and specificty. 

=head1 USAGE

Usage: calculate-statistics.pl [OPTIONS] DIR 

=head1 INPUT

=head3 DIR 

This is a directory containing the log files created by the 
supervised-disambiguate.pl program in CuiTools

=head2 Optional Arguments:

Displays the quick summary of program options.

=head3 --version

Displays the version information.

=head3 --precision NUMBER

Displays values up to NUMBER places of decimal.

=head1 OUTPUT

The Spearman's Rank Correlation between the two files.

=head1 SYSTEM REQUIREMENTS

=over

=item * Perl (version 5.8.5 or better) - http://www.perl.org

=back

=head1 CONTACT US
   
  If you have any trouble installing and using CuiTools
  please contact me: 
    
      Bridget T. McInnes: bthomson at cs.umn.edu 

      Ted Pedersen : tpederse at d.umn.edu

=head1 AUTHOR

 Bridget T. McInnes, University of Minnesota

=head1 COPYRIGHT

Copyright (c) 2010,

 Bridget T. McInnes, University of Minnesota
 bthomson at cs.umn.edu
    
 Ted Pedersen, University of Minnesota Duluth
 tpederse at d.umn.edu

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT
ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to:

 The Free Software Foundation, Inc.,
 59 Temple Place - Suite 330,
 Boston, MA  02111-1307, USA.

=cut

###############################################################################

#                               THE CODE STARTS HERE
###############################################################################

#                           ================================
#                            COMMAND LINE OPTIONS AND USAGE
#                           ================================

use Getopt::Long;

eval(GetOptions( "version", "help", "precision=s")) or die ("Please check the above mentioned option(s).\n");

#  if help is defined, print out help
if( defined $opt_help ) {
    $opt_help = 1;
    &showHelp();
    exit;
}

#  if version is requested, show version
if( defined $opt_version ) {
    $opt_version = 1;
    &showVersion();
    exit;
}

#  check for precision
my $precision = 4;
if(defined $opt_precision) {
    if ($opt_precision !~ /^\d+$/) {
	print STDERR "Value for switch --precision should be integer >= 0\n";
	&minimalUsageNotes();
	exit;
    }
    $precision = $opt_precision;
}
my $floatformat = join '', '%', '.', $precision, 'f';

# At least 2 terms should be given on the command line.
if( scalar(@ARGV) < 1 ) {
    print STDERR "A directory or a FILE should be given on the \n";
    print STDERR "command line.\n\n";
    &minimalUsageNotes();
    exit;
}

my $source = shift; 

opendir(SRC, $source) || die "Could not open dir: $source\n"; 
my @dirs = grep { $_ ne '.' and $_ ne '..'} readdir SRC;     
my $total_fp = 0; my $total_tp = 0; my $total_tn = 0; my $total_fn = 0;
print "FILE\tPPV\tNPV\tSensitivity\tSpecificity\tAccuracy\tPrecision\tRecall\tF-measure\n";
foreach my $dir (sort @dirs) { 
    
    if(! ($dir=~/\.weka/) ) { next; }
    
    print STDERR "$dir\n";
    
    $dir=~/(.*?)\.weka/;
    my $tw = $1;
    
    open(FILE, "$source/$dir/$tw.train.weka") || die "Could not open file for $tw.$train.weka\n";

    my $fp = 0; my $tp = 0; my $tn = 0; my $fn = 0;
    while(<FILE>) { 
	chomp;
	if($_=~/^\s*$/) { next; }
	if($_=~/===/) { next; }
	if($_=~/inst/) { next; }
	
	$_=~s/^\s*//g;
	
	my @array = split/\s+/, $_;
	my $num = shift @array;
	my $actual = shift @array;
	my $predicted = shift @array;

	my ($na, $a) = split/\:/, $actual;    #/
	my ($np, $p) = split/\:/, $predicted; #/
	
	#  tp 
	if( ($na == $np) && ($na == 2) ) { $tp++; }
	#  tn
	if( ($na == $np) && ($na == 3) ) { $tn++; }
	#  fp
	if( ($na != $np) && ($np == 2) ) { $fp++; }
	#  fn
	if( ($na != $np) && ($np == 3) ) { $fn++; }
    }
=comment
    my $ispecificity = -1;
    if($tn > 0 || $fp > 0) {
	$ispecificity = $tn / ($tn+$fp);
    }
    my $isensitivity = -1;
    if($tp > 0 || $fn > 0) {
	$isensitivity = $tp / ($tp+$fn);
    }
    my $ippv         = -1; 
    if($tp > 0 || $fp > 0) { 
	$ippv = $tp / ($tp+$fp);
    }
    my $inpv         = -1;
    if($fn > 0 || $tn > 0) {
	$inpv = $tn / ($fn + $tn);
    }
    my $iprecision = -1;
    if($tp > 0 || $fp > 0) { 
	$iprecision = $tp / ($tp + $fp);
    }
    my $irecall = -1;
    if($tp > 0 || $fn || 0) { 
	$irecall = $tp / ($tp + $fn);
    }
    my $ifmeasure = -1;
    if($irecall > -1 || $iprecision > -1) { 
	$ifmeasure = 2 * ( ($iprecision * $irecall) / ($iprecision + $irecall) )
    }
=cut
    print STDERR "$tp $fp $fn $tn\n";
    my $iaccuracy = ($tp + $tn) / ($tp + $fp + $fn + $tn);

    $total_tp += $tp;
    $total_tn += $tn;
    $total_fp += $fp;
    $total_fn += $fn;

    #print "$tw \t$ippv \t$inpv \t$isensitivity \t$ispecificity \t$iaccuracy \t$iprecision \t$irecall \t$ifmeasure\n";
    print "$tw $iaccuracy\n";
    close FILE;
}
 
print "\nGLOBAL RESULTS\n\n";
print "TP: $total_tp \n";
print "TN: $total_tn \n";
print "FP: $total_fp \n";
print "FN: $total_fn\n\n";

my $specificity = -1;
if($total_tn > 0 || $total_fp > 0) { 
    $specificity = $total_tn / ($total_tn+$total_fp);
}
my $sensitivity = -1;
if($total_tp > 0 || $total_fn > 0) { 
    $sensitivity = $total_tp / ($total_tp+$total_fn);
}
my $ppv         = -1; 
if($total_tp > 0 || $total_fp > 0) { 
    $ppv = $total_tp / ($total_tp+$total_fp);
}
my $npv         = -1; 
if($total_fn > 0 || $total_tn > 0) { 
    $npv = $total_tn / ($total_fn + $total_tn);
}

my $accuracy = ($total_tp + $total_tn) / ($total_tp + $total_fp + $total_fn + $total_tn);

my $precision = -1;
if($total_tp > 0 || $total_fp > 0) { 
    $precision = $total_tp / ($total_tp + $total_fp);
}
my $recall = -1;
if($total_tp > 0 || $total_fn || 0) { 
    $recall = $total_tp / ($total_tp + $total_fn);
}
my $fmeasure = -1;
if($recall > -1 && $precision > -1) { 
    $fmeasure = 2 * ( ($precision * $recall) / ($precision + $recall) )
}


print "SPECIFICITY: $specificity\n";
print "SENSITIVITY: $sensitivity\n";
print "PPV        : $ppv\n";
print "NPV        : $npv\n";
print "ACCURACY   : $accuracy\n";
print "PRECISION  : $precision\n";
print "RECALL     : $recall\n";
print "FMEASURE   : $fmeasure\n";

##############################################################################
#  function to output minimal usage notes
##############################################################################
sub minimalUsageNotes {
    
    print "Usage: calculate-statistics.pl [OPTIONS] DIR\n";
    &askHelp();
    exit;
}

##############################################################################
#  function to output help messages for this program
##############################################################################
sub showHelp() {
        
    print "This is a utility that takes as input a directory containing the\n";
    print "the log files generated supervised-disambiguate.pl in CuiTools\n";
    print " \n";
  
    print "Usage: calculate-statistics.pl [OPTIONS] DIR\n\n";

    print "Options:\n\n";

    print "--precision NUMBER       Displays values upto NUMBER places of decimal.\n\n";

    print "--version                Prints the version number\n\n";
    
    print "--help                   Prints this help message.\n\n";
}

##############################################################################
#  function to output the version number
##############################################################################
sub showVersion {
    print '$Id: calculate-statistics.pl,v 1.5 2010/11/12 20:36:00 btmcinnes Exp $';
    print "\nCopyright (c) 2010, Ted Pedersen & Bridget McInnes\n";
}

##############################################################################
#  function to output "ask for help" message when user's goofed
##############################################################################
sub askHelp {
    print STDERR "Type calculate-statistics.pl --help for help.\n";
}
    
